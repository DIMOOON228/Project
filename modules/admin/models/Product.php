<?php

namespace app\modules\admin\models;
use app\modules\admin\models\Category;
use Yii;
use yii\web\UploadedFile;

/**
 * This is the model class for table "product".
 *
 * @property int $id
 * @property int $category_id
 * @property string $name
 * @property string|null $content
 * @property float $price
 * @property float $old_price
 * @property string|null $keywords
 * @property string|null $description
 * @property string|null $img
 * @property string $hit
 * @property string $new
 * @property string $sale
 * @property int|null $count
 */
class Product extends \yii\db\ActiveRecord
{
    public $file;
    public $gallery;
//    public function behaviors()
//    {
//        return [
//            'image' => [
//                'class' => 'rico\yii2images\behaviors\ImageBehave',
//            ]
//        ];
//    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'product';
    }

    public function getProduct()
    {
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['category_id', 'name', 'price', 'old_price'], 'required'],
            [['category_id', 'count'], 'integer'],
            [['content', 'hit', 'new', 'sale', 'small_content'], 'string'],
            [['price', 'old_price'], 'number'],
            [['name', 'keywords', 'description', 'image'], 'string', 'max' => 255],
            [['file'], 'image'],
            [['gallery'], 'file', 'extensions' => 'png, jpg', 'maxFiles' => 3],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'category_id' => 'Имя категории',
            'name' => 'Имя товара',
            'content' => 'Контент',
            'small_content' => 'Небольшое описание',
            'price' => 'Цена',
            'old_price' => 'Старая цена',
            'keywords' => 'Ключевые слова',
            'description' => 'Описание',
            'image' => 'Картинка',
            'galery' => 'Галерея',
            'file' => 'КартинкаЩЩ',
            'hit' => 'Хит',
            'new' => 'Новинка',
            'sale' => 'Распродажа',
            'count' => 'Количество на складе',
        ];
    }

    public function upload()
    {
        if ($this->validate()) {
            $path = 'upload/store/' . $this->image->baseName . '.' . $this->image->extension;
            $this->image->saveAs($path);
            $this->attachImage($path, true);
            @unlink($path);
            return true;
        } else {
            return false;
        }
    }

    public function uploadGallery()
    {
        if ($this->validate()) {
            foreach ($this->gallery as $file) {
                $path = 'upload/store/' . $file->baseName . '.' . $file->extension;
                $file->saveAs($path);
                $this->attachImage($path);
            }
            return true;
        }
        return false;

    }

    public function beforeSave($insert)
    {
//        $id = Yii::$app->request->get('id');
        if ($file = UploadedFile::getInstance($this, 'file')) {
            if (!empty($this->image)) {
                $dir = Yii::getAlias('@web').'/upload/product/';
                if (file_exists($dir . $this->image)) {
                    unlink($dir . $this->image);
                }
            }
            $this->image = $file->baseName . '_' . Yii::$app->getSecurity()->generateRandomString(7) . '.' . $file->extension;
            $file->saveAs($dir.$this->image);
            return $file;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}


